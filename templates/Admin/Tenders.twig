{% extends 'backend_layout.twig' %}

{% block content %}
    <!-- Content Header (Page header) -->
    <section class="content-header">
        <h1>{{ pageTitle }}</h1>
    </section>

    <!-- Main content -->
    <section class="content">
        <div class="row">
            <div class="col-lg-6">
                <div class="box box-primary">
                    <div class="box-body">
                        <form id="updateForm" method="POST" enctype="multipart/form-data" data-toggle="validator" action="{{ currentUrl }}">
                            {% if item is defined %}
                                <input type="hidden" name="_METHOD" value="PUT" />
                            {% endif %}

                            <div class="form-group">
                                <label for="name">{{ 'Name'|trans }} <span class="text-red">*</span></label>
                                <input id="name" name="name" class="form-control" placeholder="{{ 'Name'|trans }}" value="{{ item.name|default('') }}" required="" type="text" data-error="{{ 'Invalid value'|trans }}">
                                <div class="help-block with-errors"></div>
                            </div>

                            <div class="collapse in" id="collapsible">
                                <div class="form-group">
                                    <label for="industry">{{ 'Industry'|trans }} <span class="text-red">*</span></label>
                                    <select id="industry" name="industry" class="form-control select2" required="" data-error="{{ 'Select an industry'|trans }}">
                                        <option value="" {{ (item.industry|default('') == '') ? 'selected' }} disabled>{{ 'Select an industry'|trans }}</option>
                                        {% for industry in industries %}
                                            <option value="{{ industry.industryId }}" {{ (industry.industryId == item.industry|default('')) ? 'selected' }}>{{ industry.name }}</option>
                                        {% endfor %}
                                    </select>
                                    <div class="help-block with-errors"></div>
                                </div>
                            </div>

                            <div class="form-group">
                                <label for="finishedAt">{{ 'Tender ends at'|trans }} <span class="text-red">*</span></label>
                                <div class="input-group date">
                                    <div class="input-group-addon">
                                        <i class="fa fa-calendar"></i>
                                    </div>
                                    <input type="text" id="finishedAt" name="finishedAt" class="form-control pull-right datetimepicker" value="{{ item.finishedAt|default('') == '' ? "" : item.finishedAt|date("d.m.Y H:i") }}" required="" pattern="^\d\d\.\d\d\.\d\d\d\d \d\d:\d\d$" data-error="{{ 'Invalid value'|trans }}">
                                </div>
                                <div class="help-block with-errors"></div>
                            </div>

                            <div class="form-group">
                                <label for="description">{{ 'Short description'|trans }} <span class="text-red">*</span></label>
                                <input id="description" name="description" class="form-control" placeholder="{{ 'Short description'|trans }}" value="{{ item.description|default('') }}" required="" type="text" data-error="{{ 'Invalid value'|trans }}">
                                <div class="help-block with-errors"></div>
                            </div>

                            <div class="form-group">
                                <label for="description_full">{{ 'Full description'|trans }}</label>
                                <textarea id="description_full" name="description_full" class="form-control" placeholder="{{ 'Full description'|trans }}">{{ item.description_full|default('') }}</textarea>
                                <div class="help-block with-errors"></div>
                            </div>

                            <div class="collapse in" id="collapsible">
                                <div class="form-group">
                                    <label for="contact">{{ 'Contact'|trans }} <span class="text-red">*</span></label>
                                    <select id="contact" name="contact" class="form-control select2" required="" data-error="{{ 'Select a contact'|trans }}">
                                        <option value="" {{ (item.conmact|default('') == '') ? 'selected' }} disabled></option>

                                        {% for contact in contacts %}
                                            <option value="{{ contact.id }}" {{ (contact.id == item.contact|default('')) ? 'selected' }}>{{ contact.name }}</option>
                                        {% endfor %}
                                    </select>
                                    <div class="help-block with-errors"></div>
                                </div>
                            </div>

                            <div class="form-group">
                                <label for="my_file">{{ 'Attachment'|trans }}</label>
                                <input id="my_file" name="my_file[]" type="file" multiple accept=".txt,.doc,.docx,.xls,.xlsx,.pdf">
                            </div>
                        </form>
                    </div>
                    <div class="box-footer">
                        <div class="form-group">
                            {% if item.status|default('') == 0 %}
                                <button class="btn btn-success" type="submit" form="updateForm">{{ 'Moderate'|trans }}</button>
                                <a class="btn btn-default pull-right" href="{{ path_for('admin_tenders_moderate', {'lang': lang}) }}">{{ 'Cancel'|trans }}</a>
                            {% else %}
                                <button class="btn btn-primary" type="submit" form="updateForm">{{ 'Submit'|trans }}</button>
                                <a class="btn btn-default pull-right" href="{{ path_for(indexRoute, {'lang': lang}) }}">{{ 'Cancel'|trans }}</a>
                            {% endif %}
                            {% if (session.user.groupId == 1 or session.user.userId == item.userId) and item is defined %}
                                <a class="btn btn-danger" href="{{ path_for('tenders_finish', {'lang': lang, 'id': item.tenderId}) }}" onclick="return confirm('{{ 'Are you sure, you want to finish tender?'|trans }}')">{{ 'Finish'|trans }}</a>
                            {% endif %}
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <!-- /.content -->
{% endblock %}

{% block head %}
    {{ parent() }}

    <link type="text/css" rel="stylesheet" href="{{ base_url() }}/assets/select2/dist/css/select2.min.css?ver={{ version }}">
    <link type="text/css" rel="stylesheet" href="{{ base_url() }}/assets/select2-bootstrap-theme-dist/dist/select2-bootstrap.min.css?ver={{ version }}">

    <link type="text/css" rel="stylesheet" href="{{ base_url() }}/assets/adminlte/plugins/ckeditor/skins/moono/editor_gecko.css?t=H5SE&ver={{ version }}">
    <link type="text/css" rel="stylesheet" href="{{ base_url() }}/assets/adminlte/plugins/ckeditor/skins/moono/dialog.css?t=H5SE&ver={{ version }}">

    <link type="text/css" rel="stylesheet" href="{{ base_url() }}/assets/eonasdan-bootstrap-datetimepicker/build/css/bootstrap-datetimepicker.min.css?ver={{ version }}">

    <link type="text/css" rel="stylesheet" href="{{ base_url() }}/assets/bootstrap-fileinput/css/fileinput.min.css?ver={{ version }}" media="all" >
{% endblock %}

{% block scripts %}
    {{ parent() }}

    <script src="{{ base_url() }}/assets/select2/dist/js/select2.min.js?ver={{ version }}"></script>
    <script src="{{ base_url() }}/assets/select2/dist/js/i18n/{{ lang }}.js?ver={{ version }}"></script>

    <script src="{{ base_url() }}/assets/adminlte/plugins/ckeditor/ckeditor.js?ver={{ version }}"></script>
    <script src="{{ base_url() }}/assets/adminlte/plugins/ckeditor/config.js?t=H5SE&ver={{ version }}"></script>
    <script src="{{ base_url() }}/assets/adminlte/plugins/ckeditor/lang/{{ lang }}.js?t=H5SE&ver={{ version }}"></script>
    <script src="{{ base_url() }}/assets/adminlte/plugins/ckeditor/styles.js?t=H5SE&ver={{ version }}"></script>
    <script src="{{ base_url() }}/assets/adminlte/plugins/ckeditor/plugins/image/dialogs/image.js?t=H5SE&ver={{ version }}"></script>

    <script src="{{ base_url() }}/assets/moment/min/moment-with-locales.min.js?ver={{ version }}"></script>
    <script src="{{ base_url() }}/assets/eonasdan-bootstrap-datetimepicker/build/js/bootstrap-datetimepicker.min.js?ver={{ version }}"></script>

    <!-- piexif.min.js is only needed if you wish to resize images before upload to restore exif data.
     This must be loaded before fileinput.min.js -->
    <script src="{{ base_url() }}/assets/bootstrap-fileinput/js/plugins/piexif.min.js?ver={{ version }}" type="text/javascript"></script>
    <!-- sortable.min.js is only needed if you wish to sort / rearrange files in initial preview.
         This must be loaded before fileinput.min.js -->
    <script src="{{ base_url() }}/assets/bootstrap-fileinput/js/plugins/sortable.min.js?ver={{ version }}" type="text/javascript"></script>
    <!-- purify.min.js is only needed if you wish to purify HTML content in your preview for HTML files.
         This must be loaded before fileinput.min.js -->
    <script src="{{ base_url() }}/assets/bootstrap-fileinput/js/plugins/purify.min.js?ver={{ version }}" type="text/javascript"></script>
    <!-- the main fileinput plugin file -->
    <script src="{{ base_url() }}/assets/bootstrap-fileinput/js/fileinput.min.js?ver={{ version }}"></script>
    <!-- optionally if you need a theme like font awesome theme you can include it as mentioned below -->
    <script src="{{ base_url() }}/assets/bootstrap-fileinput/themes/fa/theme.js?ver={{ version }}"></script>
    <!-- optionally if you need translation for your language then include locale file as mentioned below -->
    <script src="{{ base_url() }}/assets/bootstrap-fileinput/js/locales/{{ lang }}.js?ver={{ version }}"></script>


    <script src="{{ base_url() }}/assets/bootstrap-validator/dist/validator.min.js?ver={{ version }}"></script>

    <script src="{{ base_url() }}/resources/js/TenderChat.js?ver={{ version }}"></script>

    <script type="text/javascript">
        $(document).ready(function(){
            $('[data-toggle="tooltip"]').on('click', function () {
                var icon = $(this).find('i.fa');
                if(icon.hasClass('fa-id-card-o')){
                    icon.removeClass('fa-id-card-o').addClass('fa-comments-o');
                }else{
                    icon.removeClass('fa-comments-o').addClass('fa-id-card-o');
                }

                if($(this).parents('.direct-chat').hasClass('collapsed-box')){
                    $(this).parent().find('.chat-collapser').click();
                }
            });

            $('.direct-chat').on('click', function () {
                $(this).find("input[name='chat-message']").focus();
            });

            $( "input[name='chat-message']").keyup(function(event){
                if(event.keyCode == 13){
                    var chat_id = $(this).attr('data-chat-id');
                    eval(('myChat'+chat_id)).save();
                }
            });

            $(".star-rating").rating({
                min:0, max:5, step:1, size:'xs',
                showCaption: false,
                showClear:false
            }).on('rating.change', function(event, value, caption) {

                var voteFor = $(this).attr('data-vote-for');
                //$( "input[data-vote-for='"+voteFor+"']").rating("refresh", {displayOnly:true});

                $.ajax({
                    url: '{{ path_for('chat_vote', {'lang': lang}) }}',
                    type: "POST",
                    dataType: "json",
                    data: {
                        voteFor : $(this).attr('data-vote-for'),
                        stars   : value
                    },
                    statusCode: {
                        201: function(data, textStatus, jqXHR) {
                            $( "input[data-vote-for='"+voteFor+"']").rating("update", value);
                        },
                    }
                });
            });

	        $('.datetimepicker').datetimepicker({
                format: 'DD.MM.YYYY HH:mm',
		        locale: '{{ lang }}',
		        sideBySide: true,
	        });

            $('#industry').select2({
                placeholder: "{{ 'Select an industry'|trans }}",
                theme: "bootstrap",
                width: '100%',
            });
            $('#contact').select2({
                placeholder: "{{ 'Select a contact'|trans }}",
                theme: "bootstrap",
                width: '100%',
            });

//	        CKEDITOR.replaceClass = 'ckeditor';

            var btns = '<button type="button" class="kv-cust-btn btn btn-xs btn-default" title="{{ 'Download'|trans }}" {dataKey}>'
                        + '<i class="glyphicon glyphicon-download"></i>'
                     + '</button>';

            var fileinput = $("#my_file").fileinput({

                otherActionButtons: btns,

                showUpload:                 false,
                showCaption:                true,
                showClose:                  false,
                showRemove:                 false,
                overwriteInitial:           false,
                maxFileCount:               5,
                previewFileType:            'any',
                initialPreviewAsData:       true,
              //allowedPreviewTypes:        null,
                preferIconicPreview:        true, // this will force thumbnails to display icons for following file extensions
              //preferIconicZoomPreview:    true,
                allowedFileExtensions:      ['txt', 'doc', 'docx', 'xls', 'xlsx', 'pdf'],

	            validateInitialCount: true,

                initialCaption: "{{ files|length }} files",
                initialPreview: [
                    {% for file in files %}
                        '{{ base_url() }}/uploads/{{ file.file }}',
                    {% endfor %}
                ],
                initialPreviewConfig: [
                    {% for file in files %}
                        {
                            type: "{{ file.type }}",
                            caption: "{{ file.caption }}",
                            size: {{ file.size }},
                            key: {{ file.id }},
                            extra: {id: {{ file.id }}, file: '{{ file.file }}'}
                        },
                    {% endfor %}

                ],

                {% if files|length > 0 %}
                    deleteUrl: "{{ base_url() }}{{ path_for('tenders_delete_file', {'lang': lang, 'id': item.id}) }}",
                {% endif %}

                // configure your icon file extensions
                previewFileIconSettings: {
                    'doc': '<i class="fa fa-file-word-o text-primary"></i>',
                    'xls': '<i class="fa fa-file-excel-o text-success"></i>',
                    'ppt': '<i class="fa fa-file-powerpoint-o text-danger"></i>',
                    'pdf': '<i class="fa fa-file-pdf-o text-danger"></i>',
                    'zip': '<i class="fa fa-file-archive-o text-muted"></i>',
                    'htm': '<i class="fa fa-file-code-o text-info"></i>',
                    'txt': '<i class="fa fa-file-text-o text-info"></i>',
                    'mov': '<i class="fa fa-file-movie-o text-warning"></i>',
                    'mp3': '<i class="fa fa-file-audio-o text-warning"></i>',
                    // note for these file types below no extension determination logic
                    // has been configured (the keys itself will be used as extensions)
                    'jpg': '<i class="fa fa-file-photo-o text-danger"></i>',
                    'gif': '<i class="fa fa-file-photo-o text-muted"></i>',
                    'png': '<i class="fa fa-file-photo-o text-primary"></i>'
                },
                previewFileExtSettings: { // configure the logic for determining icon file extensions
                    'doc': function(ext) {
                        return ext.match(/(doc|docx)$/i);
                    },
                    'xls': function(ext) {
                        return ext.match(/(xls|xlsx)$/i);
                    },
                    'ppt': function(ext) {
                        return ext.match(/(ppt|pptx)$/i);
                    },
                    'zip': function(ext) {
                        return ext.match(/(zip|rar|tar|gzip|gz|7z)$/i);
                    },
                    'htm': function(ext) {
                        return ext.match(/(htm|html)$/i);
                    },
                    'txt': function(ext) {
                        return ext.match(/(txt|ini|csv|java|php|js|css)$/i);
                    },
                    'mov': function(ext) {
                        return ext.match(/(avi|mpg|mkv|mov|mp4|3gp|webm|wmv)$/i);
                    },
                    'mp3': function(ext) {
                        return ext.match(/(mp3|wav)$/i);
                    },
                    'pdf': function(ext) {
                        return ext.match(/(pdf)$/i);
                    },
                },
            });

            $('.kv-cust-btn').on('click', function() {
                var $btn = $(this), key = $btn.data('key');

                var xxx = fileinput.fileinput('getPreview').config.filter(function( obj ) {
                    return obj.key == key;
                });

                var url = "{{ base_url() }}/uploads/"+xxx[0].extra.file;

                window.open(url, '_blank', 'location=yes,height=570,width=520,scrollbars=yes,status=yes');
            });
        });
    </script>

{% endblock %}